<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.orders.mapper.ProductMapper">

    <resultMap id="productResultMap" type="com.example.orders.entity.Product">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="price" column="price"/>
        <result property="stock" column="stock"/>
        <result property="imageUrl" column="image_url"/>
        <result property="categoryId" column="category_id"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <insert id="insertProduct" parameterType="com.example.orders.entity.Product" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO products (name, description, price, stock, image_url, category_id, status, created_at, updated_at)
        VALUES (#{name}, #{description}, #{price}, #{stock}, #{imageUrl}, #{categoryId}, #{status}, NOW(), NOW())
    </insert>

    <select id="selectProductById" parameterType="java.lang.Long" resultMap="productResultMap">
        SELECT id, name, description, price, stock, image_url, category_id, status, created_at, updated_at
        FROM products
        WHERE id = #{id}
    </select>

    <select id="selectAllProducts" resultMap="productResultMap">
        SELECT id, name, description, price, stock, image_url, category_id, status, created_at, updated_at
        FROM products
    </select>

    <update id="updateProduct" parameterType="com.example.orders.entity.Product">
        UPDATE products
        SET
            name = #{name},
            description = #{description},
            price = #{price},
            stock = #{stock},
            image_url = #{imageUrl},
            category_id = #{categoryId},
            status = #{status},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteProductById" parameterType="java.lang.Long">
        DELETE FROM products
        WHERE id = #{id}
    </delete>

    <update id="updateProductStock">
        UPDATE products
        SET stock = stock + #{quantity}
        WHERE id = #{productId}
    </update>

    <select id="checkProductStock" resultType="java.lang.Integer">
        SELECT stock
        FROM products
        WHERE id = #{productId}
    </select>

    <select id="selectProductsByCategoryId" parameterType="java.lang.Long" resultMap="productResultMap">
        SELECT id, name, description, price, stock, image_url, category_id, status, created_at, updated_at
        FROM products
        WHERE category_id = #{categoryId}
    </select>

</mapper>
